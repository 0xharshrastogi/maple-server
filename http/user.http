@userID=199
@classID=KePmmKC
### ---------------------------------------------------

### Get list of all users
### Returns an array of users
###     Response: [{"userID":"199","firstname":"Harsh","imageURL":"https://www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png","email":"harsh.rastogi@example.com","familyname":"Rastogi","givenname":"Harsh Rastogi","__v":0}]

GET {{baseUri}}/v1/user HTTP/1.1

### ---------------------------------------------------

### Create new user
### Returns
###     Validation Error Response: {"statusCode":400,"status":"Bad Request","message":"\"givenname\": givenname: Required\n\"familyname\": familyname: Required\n\"email\": email: Required\n\"firstname\": firstname: Required\n\"userID\": userID: Required","description":"The server did not understand the request.","path":"/v1/user"}
###     Success Response: {"userID":"199"}


POST {{baseUri}}/v1/user HTTP/1.1
Content-Type: application/json

{
  "givenname": "Vinayak Rastogi",
  "familyname": "Rastogi",
  "email": "vinayak.rastogi@example.com",
  "firstname": "vinayak",
  "userID": "200"
}

### ---------------------------------------------------

### Get user data from userID
### Response:
### if user:
###   not found {"statusCode":404,"status":"Not Found","message":"/v1/1010 not found","description":"The server can not find the requested page.","path":"/v1/1010"}
###   success: {"message":"User Data Fetched Succesfully","_id":"62052dda6234d5b03899c515","userID":"199","firstname":"Harsh","imageURL":"https://www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png","email":"harsh.rastogi@example.com","familyname":"Rastogi","givenname":"Harsh Rastogi","__v":0}

GET {{baseUri}}/v1/user/{{userID}} HTTP/1.1

### ---------------------------------------------------

### Delete user account from 
###   NotFoundResponse: {"statusCode":404,"status":"Not Found","message":"User With ID: 1212 Not Exist","description":"The server can not find the requested page.","userID":"1212","path":"/v1/user/1212"}
###   SuccessResponse: 200

DELETE {{baseUri}}/v1/user/{{userID}} HTTP/1.1

### ---------------------------------------------------


### Update user data 
###   NotFoundResponse: {"statusCode":404,"status":"Not Found","message":"User With ID: 1212 Not Exist","description":"The server can not find the requested page.","userID":"1212","path":"/v1/user/1212"}
###   SuccessResponse: {"message":"User Record Successfully","field":"email"}

PATCH  {{baseUri}}/v1/user/{{userID}} HTTP/1.1
Content-Type: application/json

{
  "email": "harshrastogi@example.com"
}

### ---------------------------------------------------

### Get list of user classrooms from userID
### Response:
### if user:
###  not found {"statusCode":404,"status":"Not Found","message":"/user/1010/class room not found","description":"The server can not find the requested page.","path":"/user/1010/classroom"}
###  found {"message":"2 Records Found","classrooms":[{"_id":"620681d17286909a2d3b68bb","name":"Software Engg.","subjectName":"","headerImgUrl":"https://gstatic.com/classroom/themes/img_breakfast.jpg","description":"","admin":{"_id":"620539238686955f67c4bb96","userID":"199","firstname":"Harsh","imageURL":"https://www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png","email":"harshrastogi@example.com","familyname":"Rastogi","givenname":"Harsh Rastogi","__v":0},"classID":"wB1shaQ","createdAt":"2022-02-11T15:33:37.046Z","updatedAt":"2022-02-11T15:33:37.046Z","__v":0},{"_id":"620692e302fdce7833476b4c","name":"Chemistry","subjectName":"","headerImgUrl":"https://gstatic.com/classroom/themes/img_breakfast.jpg","description":"","admin":{"_id":"620539238686955f67c4bb96","userID":"199","firstname":"Harsh","imageURL":"https://www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png","email":"harshrastogi@example.com","familyname":"Rastogi","givenname":"Harsh Rastogi","__v":0},"classID":"MkTlbIz","createdAt":"2022-02-11T16:46:27.969Z","updatedAt":"2022-02-11T16:46:27.969Z","__v":0}]}
GET {{baseUri}}/v1/user/{{userID}}/classroom HTTP/1.1

### ---------------------------------------------------

### Create new classroom linked to user
PUT {{baseUri}}/v1/user/{{userID}}/classroom HTTP/1.1
Content-Type: application/json

{
  "userID": "199",
  "name": "Object Oriented Design"
}

### ---------------------------------------------------

### Enroll user to existing classroom
PUT {{baseUri}}/v1/user/{{userID}}/classroom/{{classID}}/enroll HTTP/1.1

### ---------------------------------------------------

### Marks the attendence of student to classID
PUT {{baseUri}}/v1/user/{{userID}}/classroom/{{classID}}/attendence HTTP/1.1
